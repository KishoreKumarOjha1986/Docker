When the Docker daemon starts, it creates a virtual Ethernet bridge with the name docker0

docker container port <containerid>/tcp
o/p: 80/tcp -> 0.0.0.0:80
docker container run -d -p 80:80 cookbook/apache2: To publish the hostport:containerport
docker inspect ca9cb48aac48
docker container run --name alpine102 -it --rm --net=host alpine sh: attach container with the host n/w. No veth
docker container run --name alpine102 -it --rm alpine sh: attach container to the default bridge network (docker0). Yes veth
Docker inherently supports three types of network (bridge, hosts, and none)
[root@ip-172-31-95-178 ~]# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
08f03fd3cdb6        bridge              bridge              local
1a6cbe612e06        host                host                local
451bf617f21d        none                null                local
[root@ip-172-31-95-178 ~]# docker container run --name alpine101 -it --rm --net none alpine ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever

[root@ip-172-31-95-178 ~]# docker inspect -f '{{.State.Running}}' ipcontainer
true
[root@ip-172-31-95-178 ~]# docker inspect -f '{{.State.Running}}' alpine102
false
docker container run --net container:ipcontainer --name alpine102 alpine: 
 
docker container run -d --name app01 -p 80:80 cookbook/apache2
docker container run -d --name app02 --net container:app01 cookbook/apache2
docker container run -d --name app03 --net container:app01 cookbook/apache2
===============
[root@ip-172-31-95-178 ~]# docker network create cookbook
6d4b99d57eea1152117ffb9fdb55f464d3dd292529fef2635394d9dce30470db

[root@ip-172-31-95-178 ~]# docker network inspect cookbook
[
    {
        "Name": "cookbook",
        "Id": "6d4b99d57eea1152117ffb9fdb55f464d3dd292529fef2635394d9dce30470db",
        "Created": "2019-07-20T11:49:40.618285839Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": {},
            "Config": [
                {
                    "Subnet": "172.18.0.0/16",
                    "Gateway": "172.18.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Ingress": false,
        "ConfigFrom": {
            "Network": ""
        },
        "ConfigOnly": false,
        "Containers": {},
        "Options": {},
        "Labels": {}
    }
]

[root@ip-172-31-95-178 ~]# ip addr

30: br-6d4b99d57eea: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default
    link/ether 02:42:b4:d1:4e:75 brd ff:ff:ff:ff:ff:ff
    inet 172.18.0.1/16 brd 172.18.255.255 scope global br-6d4b99d57eea
	
[root@ip-172-31-95-178 ~]# docker container run -itd --name container1 --network-alias netalias --net cookbook alpine
67efe7e0c5f7f179be82db1f18142f0eae6519ed85a5da9df24d0a98998b1d2a

[root@ip-172-31-95-178 ~]# docker container run -itd --name container2 --network-alias netalias --net cookbook alpine
ed587d575cbc9da1d5b063edfb04f6b04ebeb0264d30927e0a361165578a94a5


[root@ip-172-31-95-178 ~]# docker container inspect --format '{{.NetworkSettings.Networks.cookbook.IPAddress}}' container1
172.18.0.2
[root@ip-172-31-95-178 ~]# docker container inspect --format '{{.NetworkSettings.Networks.cookbook.IPAddress}}' container2
172.18.0.3

[root@ip-172-31-95-178 ~]# docker container exec -it container1 sh
/ # ping -c1 container2
PING container2 (172.18.0.3): 56 data bytes
64 bytes from 172.18.0.3: seq=0 ttl=255 time=0.074 ms

--- container2 ping statistics ---
1 packets transmitted, 1 packets received, 0% packet loss
round-trip min/avg/max = 0.074/0.074/0.074 ms


[root@ip-172-31-95-178 ~]# docker container run --rm --net cookbook alpine ping -c1 netalias
PING netalias (172.18.0.2): 56 data bytes
64 bytes from 172.18.0.2: seq=0 ttl=255 time=0.076 ms

--- netalias ping statistics ---
1 packets transmitted, 1 packets received, 0% packet loss
round-trip min/avg/max = 0.076/0.076/0.076 ms
[root@ip-172-31-95-178 ~]# docker container run --rm --net cookbook alpine ping -c1 netalias
PING netalias (172.18.0.3): 56 data bytes
64 bytes from 172.18.0.3: seq=0 ttl=255 time=0.079 ms

--- netalias ping statistics ---
1 packets transmitted, 1 packets received, 0% packet loss
round-trip min/avg/max = 0.079/0.079/0.079 ms

[root@ip-172-31-95-178 ~]# docker container run --rm --net cookbook sequenceiq/alpine-dig dig netalias
Unable to find image 'sequenceiq/alpine-dig:latest' locally
latest: Pulling from sequenceiq/alpine-dig
aac0c133338d: Pull complete
f1807b252f4e: Pull complete
a3ed95caeb02: Pull complete
Digest: sha256:edb82b6b7d5a59a6129fb274be003f8caa0b6ae32c64ff517f9bde9b9c0b5fc0
Status: Downloaded newer image for sequenceiq/alpine-dig:latest

; <<>> DiG 9.10.2 <<>> netalias
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 35041
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;netalias.                      IN      A

;; ANSWER SECTION:
netalias.               600     IN      A       172.18.0.3
netalias.               600     IN      A       172.18.0.2

;; Query time: 0 msec
;; SERVER: 127.0.0.11#53(127.0.0.11)
;; WHEN: Sat Jul 20 12:17:54 UTC 2019
;; MSG SIZE  rcvd: 74

Volume

[root@ip-172-31-95-178 ~]# docker volume create datavol
datavol

[root@ip-172-31-95-178 ~]# docker container run --rm -it -v datavol:/data alpine
/ # echo "This is a new file for volme test" > /data/data.txt
/ # cat /data/data.txt
This is a new file for volme test

[root@ip-172-31-95-178 ~]# docker container run  -it -v datavol:/data ubuntu cat /data/data.txt
This is a new file for volme test



